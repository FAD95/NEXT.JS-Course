{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audio_clips = _this$props.audio_clips,\n          series = _this$props.series;\n      return __jsx(\"div\", {\n        className: \"jsx-2105851563\"\n      }, __jsx(\"header\", {\n        className: \"jsx-2105851563\"\n      }, \"Podcasts\"), __jsx(\"h1\", {\n        className: \"jsx-2105851563\"\n      }, channel.title), __jsx(\"h2\", {\n        className: \"jsx-2105851563\"\n      }, \"Series\"), series.map(function (serie) {\n        return __jsx(Link, {\n          key: serie.id,\n          href: \"/podcast?id=\".concat(serie.id)\n        }, __jsx(\"a\", {\n          className: \"jsx-2105851563\"\n        }, __jsx(\"div\", {\n          key: serie.id,\n          className: \"jsx-2105851563\"\n        }, serie.title)));\n      }), __jsx(\"h2\", {\n        className: \"jsx-2105851563\"\n      }, \"Ultimos Podcast\"), audio_clips.map(function (clip) {\n        return __jsx(Link, {\n          key: clip.id,\n          href: \"/podcast?id=\".concat(clip.id)\n        }, __jsx(\"a\", {\n          className: \"jsx-2105851563\"\n        }, __jsx(\"div\", {\n          className: \"jsx-2105851563\"\n        }, clip.title)));\n      }), __jsx(_JSXStyle, {\n        id: \"964170817\"\n      }, [\".channels.jsx-2105851563{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}\", \"header.jsx-2105851563{color:#fff;background:#8756ca;padding:15px;}\", \".channel.jsx-2105851563{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);text-align:center;margin-bottom:0.5em;}\", \".channel.jsx-2105851563 img.jsx-2105851563{width:100%;}\", \".h2.jsx-2105851563{padding:5px;font-size:0.9em;font-weight:600;margin:0;}\"]), __jsx(_JSXStyle, {\n        id: \"112771683\"\n      }, [\"body{margin:0;font-family:system-ui;background:white;}\", \"a{-webkit-text-decoration:none;text-decoration:none;}\"]));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, idChannel, _await$Promise$all, _await$Promise$all2, reqChannel, reqAudios, reqSeries, dataChannel, channel, dataAudios, audio_clips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              idChannel = query.id;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\"))]));\n\n            case 4:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 3);\n              reqChannel = _await$Promise$all2[0];\n              reqAudios = _await$Promise$all2[1];\n              reqSeries = _await$Promise$all2[2];\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 11:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel; //   LLama los archivos de audio principales del podcast\n\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 15:\n              dataAudios = _context.sent;\n              audio_clips = dataAudios.body.audio_clips; //   LLama los archivos de audio de subseries del podcast\n\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 19:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audio_clips: audio_clips,\n                series: series\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}