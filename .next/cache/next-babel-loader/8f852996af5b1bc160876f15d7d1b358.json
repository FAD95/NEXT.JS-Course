{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fad/Desarrollo/platzi/next.js/pages/channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-fetch';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var channel = this.props.channel;\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }\n      }, channel.title);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, idChannel, reqChannel, dataChannel, channel, reqAudios, dataAudios;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              idChannel = query.id; //   Llama el canal con el id especificado\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)));\n\n            case 4:\n              reqChannel = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 7:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              console.log(dataChannel);\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")));\n\n            case 12:\n              reqAudios = _context.sent;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(req.json());\n\n            case 15:\n              dataAudios = _context.sent;\n              return _context.abrupt(\"return\", {\n                channel: channel\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/fad/Desarrollo/platzi/next.js/pages/channel.js"],"names":["channel","props","title","query","idChannel","id","fetch","reqChannel","json","dataChannel","body","console","log","reqAudios","req","dataAudios","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,kBAAP;;;;;;;;;;;;;;;6BAmBW;AAAA,UACCA,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAACE,KAAb,CAAP;AACD;;;;;;;;;AApB8BC,cAAAA,K,QAAAA,K;AACzBC,cAAAA,S,GAAYD,KAAK,CAACE,E,EAEtB;;;+CACuBC,KAAK,8CACYF,SADZ,E;;;AAAxBG,cAAAA,U;;+CAGoBA,UAAU,CAACC,IAAX,E;;;AAApBC,cAAAA,W;AACAT,cAAAA,O,GAAUS,WAAW,CAACC,IAAZ,CAAiBV,O;AAC/BW,cAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;+CAEsBH,KAAK,8CACaF,SADb,kB;;;AAAvBS,cAAAA,S;;+CAGmBC,GAAG,CAACN,IAAJ,E;;;AAAnBO,cAAAA,U;+CACG;AAAEf,gBAAAA,OAAO,EAAPA;AAAF,e;;;;;;;;;;;;EAhBkBgB,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch'\nexport default class extends React.Component {\n  static async getInitialProps({ query }) {\n    let idChannel = query.id\n\n    //   Llama el canal con el id especificado\n    let reqChannel = await fetch(\n      `https://api.audioboom.com/channels/${idChannel}`\n    )\n    let dataChannel = await reqChannel.json()\n    let channel = dataChannel.body.channel\n    console.log(dataChannel)\n\n    let reqAudios = await fetch(\n      `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n    )\n    let dataAudios = await req.json()\n    return { channel }\n  }\n  render() {\n    const { channel } = this.props\n    return <h1>{channel.title}</h1>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}