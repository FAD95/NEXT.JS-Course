{"ast":null,"code":"var _jsxFileName = \"/home/fad/Desarrollo/platzi/next.js/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from '../_error';\nexport default class extends React.Component {\n  static async getInitialProps({\n    res\n  }) {\n    try {\n      let [reqEnglish, reqSpanish] = await Promise.all([fetch('https://api.audioboom.com/channels/recommended'), fetch(`https://api.audioboom.com/channels/recommended?category_ids[]=179`)]);\n\n      if (reqEnglish.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audio_clips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      } //   Llama el canal con el id especificado\n\n\n      let dataEnglish = await reqEnglish.json();\n      let english = dataEnglish.body;\n      let dataSpanish = await reqSpanish.json();\n      let spanish = dataSpanish.body;\n      return {\n        english,\n        spanish,\n        statusCode: 200\n      };\n    } catch (e) {\n      res.statusCode = 503;\n      return {\n        english: null,\n        spanish: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      english,\n      spanish,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"Podcasts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(ChannelGrid, {\n      language: \"English\",\n      channels: english,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), __jsx(ChannelGrid, {\n      language: \"Spanish\",\n      channels: spanish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/fad/Desarrollo/platzi/next.js/pages/index.js"],"names":["Layout","ChannelGrid","Error","React","Component","getInitialProps","res","reqEnglish","reqSpanish","Promise","all","fetch","status","statusCode","reqChannel","channel","audio_clips","series","dataEnglish","json","english","body","dataSpanish","spanish","e","render","props"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAC3C,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,QAAI;AACF,UAAI,CAACC,UAAD,EAAaC,UAAb,IAA2B,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC/CC,KAAK,CAAC,gDAAD,CAD0C,EAE/CA,KAAK,CACF,mEADE,CAF0C,CAAZ,CAArC;;AAMA,UAAIJ,UAAU,CAACK,MAAX,IAAqB,GAAzB,EAA8B;AAC5BN,QAAAA,GAAG,CAACO,UAAJ,GAAiBC,UAAU,CAACF,MAA5B;AACA,eAAO;AACLG,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,WAAW,EAAE,IAFR;AAGLC,UAAAA,MAAM,EAAE,IAHH;AAILJ,UAAAA,UAAU,EAAEC,UAAU,CAACF;AAJlB,SAAP;AAMD,OAfC,CAiBF;;;AACA,UAAIM,WAAW,GAAG,MAAMX,UAAU,CAACY,IAAX,EAAxB;AACA,UAAIC,OAAO,GAAGF,WAAW,CAACG,IAA1B;AACA,UAAIC,WAAW,GAAG,MAAMd,UAAU,CAACW,IAAX,EAAxB;AACA,UAAII,OAAO,GAAGD,WAAW,CAACD,IAA1B;AAEA,aAAO;AAAED,QAAAA,OAAF;AAAWG,QAAAA,OAAX;AAAoBV,QAAAA,UAAU,EAAE;AAAhC,OAAP;AACD,KAxBD,CAwBE,OAAOW,CAAP,EAAU;AACVlB,MAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACA,aAAO;AACLO,QAAAA,OAAO,EAAE,IADJ;AAELG,QAAAA,OAAO,EAAE,IAFJ;AAGLV,QAAAA,UAAU,EAAE;AAHP,OAAP;AAKD;AACF;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWG,MAAAA,OAAX;AAAoBV,MAAAA;AAApB,QAAmC,KAAKa,KAA9C;;AACA,QAAIb,UAAU,KAAK,GAAnB,EAAwB;AACtB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAC,SAAtB;AAAgC,MAAA,QAAQ,EAAEO,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAC,SAAtB;AAAgC,MAAA,QAAQ,EAAEG,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA/C0C","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nimport Error from '../_error'\nexport default class extends React.Component {\n  static async getInitialProps({ res }) {\n    try {\n      let [reqEnglish, reqSpanish] = await Promise.all([\n        fetch('https://api.audioboom.com/channels/recommended'),\n        fetch(\n          `https://api.audioboom.com/channels/recommended?category_ids[]=179`\n        )\n      ])\n      if (reqEnglish.status >= 400) {\n        res.statusCode = reqChannel.status\n        return {\n          channel: null,\n          audio_clips: null,\n          series: null,\n          statusCode: reqChannel.status\n        }\n      }\n\n      //   Llama el canal con el id especificado\n      let dataEnglish = await reqEnglish.json()\n      let english = dataEnglish.body\n      let dataSpanish = await reqSpanish.json()\n      let spanish = dataSpanish.body\n\n      return { english, spanish, statusCode: 200 }\n    } catch (e) {\n      res.statusCode = 503\n      return {\n        english: null,\n        spanish: null,\n        statusCode: 503\n      }\n    }\n  }\n\n  render() {\n    const { english, spanish, statusCode } = this.props\n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />\n    }\n    return (\n      <Layout title=\"Podcasts\">\n        <ChannelGrid language=\"English\" channels={english}></ChannelGrid>\n        <ChannelGrid language=\"Spanish\" channels={spanish}></ChannelGrid>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}