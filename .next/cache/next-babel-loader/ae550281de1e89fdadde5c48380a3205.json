{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fad/Desarrollo/platzi/next.js/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          english = _this$props.english,\n          spanish = _this$props.spanish,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode !== 200) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 14\n          }\n        }, \"Se break the servidor\");\n      }\n\n      return __jsx(Layout, {\n        title: \"Podcasts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, __jsx(ChannelGrid, {\n        language: \"English\",\n        channels: english,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), __jsx(ChannelGrid, {\n        language: \"Spanish\",\n        channels: spanish,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var _await$Promise$all, _await$Promise$all2, reqEnglish, reqSpanish, dataEnglish, english, dataSpanish, spanish;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([fetch('https://api.audioboom.com/channels/recommended'), fetch(\"https://api.audioboom.com/channels/recommended?category_ids[]=179\")]));\n\n            case 3:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n              reqEnglish = _await$Promise$all2[0];\n              reqSpanish = _await$Promise$all2[1];\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(reqEnglish.json());\n\n            case 9:\n              dataEnglish = _context.sent;\n              english = dataEnglish.body;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(reqSpanish.json());\n\n            case 13:\n              dataSpanish = _context.sent;\n              spanish = dataSpanish.body;\n              return _context.abrupt(\"return\", {\n                english: english,\n                spanish: spanish,\n                statusCode: 200\n              });\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                english: null,\n                spanish: null,\n                statusCode: 503\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 18]], Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/fad/Desarrollo/platzi/next.js/pages/index.js"],"names":["Layout","ChannelGrid","props","english","spanish","statusCode","Promise","all","fetch","reqEnglish","reqSpanish","json","dataEnglish","body","dataSpanish","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;;;;;;;;;;;;6BA2BW;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,OADV,eACUA,OADV;AAAA,UACmBC,UADnB,eACmBA,UADnB;;AAEP,UAAIA,UAAU,KAAK,GAAnB,EAAwB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD;;AACD,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAC,SAAtB;AAAgC,QAAA,QAAQ,EAAEF,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAC,SAAtB;AAAgC,QAAA,QAAQ,EAAEC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;;;;;;;;;+CAlCwCE,OAAO,CAACC,GAAR,CAAY,CAC/CC,KAAK,CAAC,gDAAD,CAD0C,EAE/CA,KAAK,qEAF0C,CAAZ,C;;;;;AAAhCC,cAAAA,U;AAAYC,cAAAA,U;;+CAQOD,UAAU,CAACE,IAAX,E;;;AAApBC,cAAAA,W;AACAT,cAAAA,O,GAAUS,WAAW,CAACC,I;;+CACFH,UAAU,CAACC,IAAX,E;;;AAApBG,cAAAA,W;AACAV,cAAAA,O,GAAUU,WAAW,CAACD,I;+CAEnB;AAAEV,gBAAAA,OAAO,EAAPA,OAAF;AAAWC,gBAAAA,OAAO,EAAPA,OAAX;AAAoBC,gBAAAA,UAAU,EAAE;AAAhC,e;;;;;+CAEA;AACLF,gBAAAA,OAAO,EAAE,IADJ;AAELC,gBAAAA,OAAO,EAAE,IAFJ;AAGLC,gBAAAA,UAAU,EAAE;AAHP,e;;;;;;;;;;;;EAlBgBU,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nexport default class extends React.Component {\n  static async getInitialProps() {\n    try {\n      let [reqEnglish, reqSpanish] = await Promise.all([\n        fetch('https://api.audioboom.com/channels/recommended'),\n        fetch(\n          `https://api.audioboom.com/channels/recommended?category_ids[]=179`\n        )\n      ])\n\n      //   Llama el canal con el id especificado\n      let dataEnglish = await reqEnglish.json()\n      let english = dataEnglish.body\n      let dataSpanish = await reqSpanish.json()\n      let spanish = dataSpanish.body\n\n      return { english, spanish, statusCode: 200 }\n    } catch (e) {\n      return {\n        english: null,\n        spanish: null,\n        statusCode: 503\n      }\n    }\n  }\n\n  render() {\n    const { english, spanish, statusCode } = this.props\n    if (statusCode !== 200) {\n      return <div>Se break the servidor</div>\n    }\n    return (\n      <Layout title=\"Podcasts\">\n        <ChannelGrid language=\"English\" channels={english}></ChannelGrid>\n        <ChannelGrid language=\"Spanish\" channels={spanish}></ChannelGrid>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}