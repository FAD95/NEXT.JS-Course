{"version":3,"file":"static/webpack/static/development/pages/index.js.bd24fe12b767ba2196a3.hot-update.js","sources":["webpack:///./components/ChannelGrid.js","webpack:///./pages/index.js"],"sourcesContent":["export default class ChannelGrid extends React.Component {\n  render() {\n    const { channels } = this.props\n\n    return (\n      <div>\n        <h2>English</h2>\n        <div className=\"channels\">\n          {channels.map((channel) => (\n            <div key={channel.id}>\n              <Link href={`/channel?id=${channel.id}`}>\n                <a className=\"channel\">\n                  <img\n                    src={channel.urls.logo_image.original}\n                    alt=\"channel logo\"\n                  />\n                </a>\n              </Link>\n              <h2>{channel.title}</h2>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n","import 'isomorphic-fetch'\nimport Link from 'next/link'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nexport default class extends React.Component {\n  static async getInitialProps() {\n    let [reqEnglish, reqSpanish] = await Promise.all([\n      fetch('https://api.audioboom.com/channels/recommended'),\n      fetch(`https://api.audioboom.com/channels/recommended?category_ids[]=179`)\n    ])\n\n    //   Llama el canal con el id especificado\n    let dataEnglish = await reqEnglish.json()\n    let english = dataEnglish.body\n    let dataSpanish = await reqSpanish.json()\n    let spanish = dataSpanish.body\n\n    return { english, spanish }\n  }\n\n  render() {\n    const { english, spanish } = this.props\n    return (\n      <Layout title=\"Podcasts\">\n        <ChannelGrid channels={english}></ChannelGrid>\n        <h2>English</h2>\n        <div className=\"channels\">\n          {english.map((englishChannel) => (\n            <div key={englishChannel.id}>\n              <Link href={`/channel?id=${englishChannel.id}`}>\n                <a className=\"channel\">\n                  <img\n                    src={englishChannel.urls.logo_image.original}\n                    alt=\"channel logo\"\n                  />\n                </a>\n              </Link>\n              <h2>{englishChannel.title}</h2>\n            </div>\n          ))}\n        </div>\n        <h2>Espa√±ol</h2>\n        <div className=\"channels\">\n          {spanish.map((spanishChannel) => (\n            <div key={spanishChannel.id}>\n              <Link href={`/channel?id=${spanishChannel.id}`}>\n                <a className=\"channel\">\n                  <img\n                    src={spanishChannel.urls.logo_image.original}\n                    alt=\"channel logo\"\n                  />\n                </a>\n              </Link>\n              <h2>{spanishChannel.title}</h2>\n            </div>\n          ))}\n        </div>\n\n        <style jsx>{`\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          .channel {\n            display: block;\n            margin-bottom: 0.5em;\n            color: #333;\n            text-decoration: none;\n          }\n          .channel img {\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            width: 100%;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n        `}</style>\n      </Layout>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAgBA;;;;AAxBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAgBA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AApBA;AAAA;AAAA;AA+DA;;;;;;;;;;;AAhFA;AACA;;;;AADA;AAAA;;AAMA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAdA;AACA;;;;;A","sourceRoot":""}