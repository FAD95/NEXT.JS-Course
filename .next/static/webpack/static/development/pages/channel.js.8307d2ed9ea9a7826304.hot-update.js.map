{"version":3,"file":"static/webpack/static/development/pages/channel.js.8307d2ed9ea9a7826304.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import 'isomorphic-fetch'\nimport Link from 'next/link'\n\nexport default class extends React.Component {\n  static async getInitialProps({ query }) {\n    let idChannel = query.id\n\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n    ])\n\n    //   Llama el canal con el id especificado\n    let dataChannel = await reqChannel.json()\n    let channel = dataChannel.body.channel\n\n    //   LLama los archivos de audio principales del podcast\n    let dataAudios = await reqAudios.json()\n    let audio_clips = dataAudios.body.audio_clips\n\n    //   LLama los archivos de audio de subseries del podcast\n    let dataSeries = await reqSeries.json()\n    let series = dataSeries.body.channels\n    return { channel, audio_clips, series }\n  }\n  render() {\n    const { channel, audio_clips, series } = this.props\n    return (\n      <div>\n        <header>Podcasts</header>\n        <h1>{channel.title}</h1>\n        <h2>Series</h2>\n        {series.map((serie) => (\n          <Link key={serie.id} href={`/podcast?id=${serie.id}`}>\n            <a>\n              <div key={serie.id}>{serie.title}</div>\n            </a>\n          </Link>\n        ))}\n        <h2>Ultimos Podcast</h2>\n        {audio_clips.map((clip) => (\n          <Link key={clip.id} href={`/podcast?id=${clip.id}`}>\n            <a>\n              <div>{clip.title}</div>\n            </a>\n          </Link>\n        ))}\n\n        <style jsx>{`\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n          }\n          .channel {\n             {\n              /* max-width: 1000px; */\n            }\n             {\n              /* margin: 0 auto 0.5em; */\n            }\n            display: block;\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            text-align: center;\n            margin-bottom: 0.5em;\n          }\n          .channel img {\n            width: 100%;\n          }\n          .h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n          }\n        `}</style>\n        <style jsx global>{`\n          body {\n            margin: 0;\n            font-family: system-ui;\n            background: white;\n          }\n          a {\n            text-decoration: none;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;AAwmEA;;;;;;;;;;AA5FA;AACA;;AAEA;AACA;;;;AADA;AAAA;AAAA;;AAOA;AACA;;AADA;AACA;AACA;;AAEA;AACA;;AADA;AACA;AACA;;AAEA;AACA;;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAtBA;AACA;;;;;A","sourceRoot":""}